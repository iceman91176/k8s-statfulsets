---
apiVersion: v1
kind: Service
metadata:
  annotations:
  labels:
    app: zk-svc
  name: zk-svc
spec:
  clusterIP: None
  ports:
  - name: server
    port: 2888
    protocol: TCP
    targetPort: 2888
  - name: leader-election
    port: 3888
    protocol: TCP
    targetPort: 3888
  - name: client
    port: 2181
    protocol: TCP
    targetPort: 2181
  selector:
    app: zk
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: zk-cm
data:
  jvm.heap: "1G"
  tick: "2000"
  init: "10"
  sync: "5"
  client.cnxns: "60"
  snap.retain: "3"
  purge.interval: "0"
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: zk-pdb
spec:
  selector:
    matchLabels:
      app: zk
  minAvailable: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
  labels:
    app: zk
  name: zk
spec:
  podManagementPolicy: OrderedReady
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: zk
  serviceName: zk-svc
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: zk
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - zk
            topologyKey: kubernetes.io/hostname
      containers:
      - command:
        - sh
        - -c
        - zkGenConfig.sh && zkServer.sh start-foreground
        env:
        - name: ZK_REPLICAS
          value: "2"
        - name: ZK_HEAP_SIZE
          valueFrom:
            configMapKeyRef:
              key: jvm.heap
              name: zk-cm
        - name: ZK_TICK_TIME
          valueFrom:
            configMapKeyRef:
              key: tick
              name: zk-cm
        - name: ZK_INIT_LIMIT
          valueFrom:
            configMapKeyRef:
              key: init
              name: zk-cm
        - name: ZK_SYNC_LIMIT
          valueFrom:
            configMapKeyRef:
              key: tick
              name: zk-cm
        - name: ZK_MAX_CLIENT_CNXNS
          valueFrom:
            configMapKeyRef:
              key: client.cnxns
              name: zk-cm
        - name: ZK_SNAP_RETAIN_COUNT
          valueFrom:
            configMapKeyRef:
              key: snap.retain
              name: zk-cm
        - name: ZK_PURGE_INTERVAL
          valueFrom:
            configMapKeyRef:
              key: purge.interval
              name: zk-cm
        - name: ZK_CLIENT_PORT
          value: "2181"
        - name: ZK_SERVER_PORT
          value: "2888"
        - name: ZK_ELECTION_PORT
          value: "3888"
        image: docker-registry.default.svc:5000/openshift/zookeeper:latest
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - zkOk.sh
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: k8szk
        ports:
        - containerPort: 2181
          name: client
          protocol: TCP
        - containerPort: 2888
          name: server
          protocol: TCP
        - containerPort: 3888
          name: leader-election
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - zkOk.sh
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 500m
            memory: 2Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/zookeeper
          name: datadir
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  updateStrategy:
    type: OnDelete
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi

